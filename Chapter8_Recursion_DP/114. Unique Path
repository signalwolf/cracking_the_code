class Solution:
    # @return an integer
    # def c(self, m, n):
    #     mp = {}
    #     for i in range(m):
    #         for j in range(n):
    #             if(i == 0 or j == 0):
    #                 mp[(i, j)] = 1
    #             else:
    #                 mp[(i, j)] = mp[(i - 1, j)] + mp[(i, j - 1)]
    #     return mp[(m - 1, n - 1)]

    def uniquePaths(self, m, n):
        # return self.c(m, n)
        dp = [[0 for i in xrange(n)] for j in xrange (m)]
        for i in xrange (m):
            for j in xrange(n):
                if (i == 0 or j == 0):
                    dp [i][j] = 1
                else:
                    dp [i][j] = dp [i - 1][j] + dp[i][j - 1]
        return dp[m - 1][n -1]
