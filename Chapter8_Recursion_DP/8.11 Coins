2022ms, 28.56%
1732ms, 50%

class Solution(object):
    def coinChange(self, coins, amount):
        """
        :type coins: List[int]
        :type amount: int
        :rtype: int
        """
        # dp [i]: the fewest number of coins could make up the amount
        # min (dp [i - 1], dp [i - 2], dp [i - 5]) + 1
        dp = [sys.maxint] * (amount + 1)
        dp [0] = 0
        for i in xrange (1, amount + 1):
            for j in coins:
                if i - j < 0: continue
                dp[i] = min (dp[i], dp[i - j] + 1)
        if dp[amount] == sys.maxint:
            return -1
        else:
            return dp[amount]
