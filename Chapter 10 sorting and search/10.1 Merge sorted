# Lintcode 6. Merge Two Sorted Arrays 
class Solution:
    #@param A and B: sorted integer array A and B.
    #@return: A new sorted integer array
    def mergeSortedArray(self, A, B):
        # write your code here
        start, C = 0, []
        i, j = 0, 0
        while i< len(A) and j < len(B):
            if A[i] <= B[j]:
                C.append (A[i])
                i+= 1
            else:
                C.append(B[j])
                j+= 1
        if i< len(A):
            for temp in A[i:]:
                C.append(temp)
        elif j< len(B):
            for temp in B[j:]:
                C.append(temp)
        return C

# Save some space: move forward
class Solution:
    """
    @param: A: sorted integer array A
    @param: B: sorted integer array B
    @return: A new sorted integer array
    """
    def mergeSortedArray(self, A, B):
        # write your code here
        # regular one: O(m + n), space O(m + n)
        lenA, lenB = len(A), len(B)
        A = [0] * lenB + A
        i, j = lenB, 0
        temp = 0
        while i < lenB + lenA and j < lenB:
            if A[i] > B[j]:
                A[temp] = B[j]
                j += 1
            else:
                A[temp] = A[i]
                i += 1
            temp += 1
        if j != lenB:
            A[temp:] = B[j:]
        return A

#Save some space: move backward:
class Solution:
    """
    @param: A: sorted integer array A
    @param: B: sorted integer array B
    @return: A new sorted integer array
    """
    def mergeSortedArray(self, A, B):
        # write your code here
        A_ind, B_ind = len(A) - 1, len(B) - 1
        A = A + [0] * len(B)
        R_ind = len (A) - 1
        while A_ind >= 0 and B_ind >= 0:
            if A[A_ind] > B[B_ind]:
                A[R_ind] = A[A_ind]
                A_ind -= 1
            else:
                A[R_ind] = B[B_ind]
                B_ind -= 1
            R_ind -= 1
        if B_ind >= 0:
            A[:B_ind + 1] = B[:B_ind + 1]
        return A
