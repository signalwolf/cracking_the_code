# Lint code 62. Search in Rotated Sorted Array 
class Solution:
    """
    @param A : a list of integers
    @param target : an integer to be searched
    @return : an integer
    """
    def search(self, A, target):
        # write your code here
        if len(A) == 0:
            return -1
        elif len(A) == 1:
            if A[0] == target:
                return 0
            else:
                return -1
        elif A[0] < A[-1]:
            start, end = 0, len(A) - 1
            while start + 1 < end:
                mid = start + (end - start)/2
                if A[mid] == target:
                    return mid
                elif A[mid] > target:
                    end = mid
                else:
                    start = mid
            if A[start] == target:
                return start
            elif A[end] == target:
                return end
            else:
                return -1
        else:
            start, end = 0, len(A) - 1
            while start + 1 < end:
                mid = start + (end - start)/2
                if A[mid] <= A[end]:
                    end = mid
                else:
                    start = mid
            AminP = end
            AmaxP = start
            if target > A[-1]:
                start = 0
                end = AmaxP
            elif target < A[-1]:
                start = AminP
                end = len(A) -1 
            else:
                return target
            while start + 1 < end:
                mid = start + (end - start)/2
                if A[mid] == target:
                    return mid
                elif A[mid] > target:
                    end = mid
                else:
                    start = mid
            if A[start] == target:
                return start
            elif A[end] == target:
                return end
            else:
                return -1
